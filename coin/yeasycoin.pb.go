// Code generated by protoc-gen-go.
// source: yeasycoin.proto
// DO NOT EDIT!

/*
Package coin is a generated protocol buffer package.

It is generated from these files:
	yeasycoin.proto

It has these top-level messages:
	Bank
	Company
	Transaction
*/
package coin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Transaction_FromType int32

const (
	Transaction_FROM_CENTERBANK Transaction_FromType = 0
	Transaction_FROM_BANK       Transaction_FromType = 1
	Transaction_FROM_COMPANY    Transaction_FromType = 2
)

var Transaction_FromType_name = map[int32]string{
	0: "FROM_CENTERBANK",
	1: "FROM_BANK",
	2: "FROM_COMPANY",
}
var Transaction_FromType_value = map[string]int32{
	"FROM_CENTERBANK": 0,
	"FROM_BANK":       1,
	"FROM_COMPANY":    2,
}

func (x Transaction_FromType) String() string {
	return proto.EnumName(Transaction_FromType_name, int32(x))
}
func (Transaction_FromType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Transaction_ToType int32

const (
	Transaction_TO_CENTERBANK Transaction_ToType = 0
	Transaction_TO_BANK       Transaction_ToType = 1
	Transaction_TO_COMPANY    Transaction_ToType = 2
)

var Transaction_ToType_name = map[int32]string{
	0: "TO_CENTERBANK",
	1: "TO_BANK",
	2: "TO_COMPANY",
}
var Transaction_ToType_value = map[string]int32{
	"TO_CENTERBANK": 0,
	"TO_BANK":       1,
	"TO_COMPANY":    2,
}

func (x Transaction_ToType) String() string {
	return proto.EnumName(Transaction_ToType_name, int32(x))
}
func (Transaction_ToType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

// Bank include centerBank and normal bank
type Bank struct {
	Id          int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	TotalNumber uint64 `protobuf:"varint,3,opt,name=totalNumber" json:"totalNumber,omitempty"`
	RestNumber  uint64 `protobuf:"varint,4,opt,name=restNumber" json:"restNumber,omitempty"`
}

func (m *Bank) Reset()                    { *m = Bank{} }
func (m *Bank) String() string            { return proto.CompactTextString(m) }
func (*Bank) ProtoMessage()               {}
func (*Bank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Company
type Company struct {
	Id     int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Number uint64 `protobuf:"varint,3,opt,name=number" json:"number,omitempty"`
}

func (m *Company) Reset()                    { *m = Company{} }
func (m *Company) String() string            { return proto.CompactTextString(m) }
func (*Company) ProtoMessage()               {}
func (*Company) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Transaction
type Transaction struct {
	FromType  Transaction_FromType `protobuf:"varint,1,opt,name=fromType,enum=coin.Transaction_FromType" json:"fromType,omitempty"`
	FromId    int64                `protobuf:"varint,2,opt,name=fromId" json:"fromId,omitempty"`
	ToType    Transaction_ToType   `protobuf:"varint,3,opt,name=toType,enum=coin.Transaction_ToType" json:"toType,omitempty"`
	ToId      int64                `protobuf:"varint,4,opt,name=toId" json:"toId,omitempty"`
	Timestamp string               `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Number    uint64               `protobuf:"varint,6,opt,name=number" json:"number,omitempty"`
	Id        string               `protobuf:"bytes,7,opt,name=id" json:"id,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Bank)(nil), "coin.Bank")
	proto.RegisterType((*Company)(nil), "coin.Company")
	proto.RegisterType((*Transaction)(nil), "coin.Transaction")
	proto.RegisterEnum("coin.Transaction_FromType", Transaction_FromType_name, Transaction_FromType_value)
	proto.RegisterEnum("coin.Transaction_ToType", Transaction_ToType_name, Transaction_ToType_value)
}

func init() { proto.RegisterFile("yeasycoin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4f, 0xc2, 0x40,
	0x10, 0x85, 0xa5, 0x5d, 0x5b, 0x3a, 0x85, 0x52, 0x96, 0x4b, 0xe3, 0xc9, 0xf4, 0xc4, 0xc1, 0xf4,
	0x20, 0x17, 0x8f, 0x02, 0x81, 0x84, 0x18, 0x5a, 0x43, 0x7a, 0xf1, 0x64, 0x16, 0xa8, 0x49, 0xa3,
	0xbb, 0xdb, 0xb4, 0xeb, 0xa1, 0x7f, 0xca, 0xdf, 0xe8, 0xee, 0x50, 0x0d, 0x6a, 0xe2, 0x6d, 0xe7,
	0xcd, 0xfb, 0x5e, 0xde, 0x64, 0x61, 0xd4, 0x16, 0xac, 0x69, 0x0f, 0xb2, 0x14, 0x49, 0x55, 0x4b,
	0x25, 0x29, 0x31, 0xef, 0x78, 0x03, 0x64, 0xc1, 0xc4, 0x2b, 0x05, 0xb0, 0xca, 0x63, 0xd4, 0xbb,
	0xee, 0x4d, 0x6d, 0x3a, 0x00, 0x22, 0x18, 0x2f, 0x22, 0x4b, 0x4f, 0x1e, 0x9d, 0x80, 0xaf, 0xa4,
	0x62, 0x6f, 0xe9, 0x3b, 0xdf, 0x17, 0x75, 0x64, 0x6b, 0x91, 0x50, 0xed, 0xaf, 0x8b, 0x46, 0x75,
	0x1a, 0x31, 0x5a, 0x3c, 0x03, 0x77, 0x29, 0x79, 0xc5, 0x44, 0xfb, 0x4f, 0x5a, 0x00, 0x8e, 0x38,
	0x0b, 0x8a, 0x3f, 0x2c, 0xf0, 0xf3, 0x9a, 0x89, 0x86, 0x1d, 0x54, 0x29, 0x05, 0xbd, 0x81, 0xfe,
	0x4b, 0x2d, 0x79, 0xde, 0x56, 0x05, 0xf2, 0xc1, 0xed, 0x55, 0x82, 0xa5, 0xcf, 0x4c, 0xc9, 0xba,
	0x73, 0x98, 0x34, 0xe3, 0xde, 0x1c, 0x31, 0xdd, 0xa6, 0x53, 0x70, 0x94, 0x44, 0xd6, 0x46, 0x36,
	0xfa, 0xcb, 0xe6, 0xb8, 0x37, 0xad, 0x94, 0xd4, 0x1c, 0x41, 0x6e, 0x0c, 0x9e, 0x2a, 0xb9, 0x3e,
	0x88, 0xf1, 0x2a, 0xba, 0xfc, 0x55, 0xd4, 0xc1, 0x8b, 0x4f, 0x27, 0xb9, 0x66, 0x17, 0xdf, 0x43,
	0xff, 0xbb, 0xc2, 0x04, 0x46, 0xeb, 0x5d, 0xb6, 0x7d, 0x5e, 0xae, 0xd2, 0x7c, 0xb5, 0x5b, 0xcc,
	0xd3, 0x87, 0xf0, 0x82, 0x0e, 0xc1, 0x43, 0x11, 0xc7, 0x1e, 0x0d, 0x61, 0x70, 0xf2, 0x64, 0xdb,
	0xc7, 0x79, 0xfa, 0x14, 0x5a, 0xf1, 0x1d, 0x38, 0x5d, 0x91, 0x31, 0x0c, 0xf3, 0xec, 0x27, 0xed,
	0x83, 0xab, 0xa5, 0x8e, 0x0d, 0x00, 0xcc, 0xfe, 0x8b, 0xdc, 0x3b, 0xf8, 0x7b, 0xb3, 0xcf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xf0, 0x83, 0x78, 0x87, 0xd0, 0x01, 0x00, 0x00,
}
